"use strict";

// The service - will be used by controllers or other services, filters, etc.
angular.module("play.routing", []).factory("playRoutes", function($http) {

	/*
	* Wrap a Play JS function with a new function that adds the appropriate $http method.
	* Note that the url has been already applied to the $http method so you only have to pass in
	* the data (if any).
	* Note: This is not only easier on the eyes, but must be called in a separate function with its own
	* set of arguments, because otherwise JavaScript's function scope will bite us.
	* @param playFunction The function from Play's jsRouter to be wrapped
	*/
	var wrapHttp = function(playFunction) {
		return function(/*arguments*/) {
			var routeObject = playFunction.apply(this, arguments);
			var httpMethod = routeObject.method.toLowerCase();
			var url = routeObject.url;
			var res = {
				method : httpMethod, url : url, absoluteUrl : routeObject.absoluteURL, webSocketUrl : routeObject.webSocketURL
			};
			res[httpMethod] = function(obj) {
				return $http[httpMethod](url, obj);
			};
			return res;
		};
	};

	// Add package object, in most cases "controllers"
	var addPackageObject = function(packageName, service) {
		if (!(packageName in playRoutes)) {
			playRoutes[packageName] = {};
		}
	};

	// Add controller object, e.g. Application
	var addControllerObject = function(packageName, controllerKey, service) {
		if (!(controllerKey in playRoutes[packageName])) {
			playRoutes[packageName][controllerKey] = {};
		}
	};

	var playRoutes = {};
	// Loop over all items in the jsRoutes generated by Play, wrap and add them to
	// playRoutes
	for ( var packageKey in jsRoutes) {
		var packageObject = jsRoutes[packageKey];
		addPackageObject(packageKey, playRoutes);
		for ( var controllerKey in packageObject) {
			var controller = packageObject[controllerKey];
			addControllerObject(packageKey, controllerKey, playRoutes);
			for ( var controllerMethodKey in controller) {
				playRoutes[packageKey][controllerKey][controllerMethodKey] = wrapHttp(controller[controllerMethodKey]);
			}
		}
	}
	return playRoutes;
});
